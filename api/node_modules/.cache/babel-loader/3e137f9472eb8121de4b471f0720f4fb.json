{"remainingRequest":"/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/node_modules/babel-loader/lib/index.js!/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/node_modules/vuetify/lib/components/VCalendar/util/parser.js","dependencies":[{"path":"/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/node_modules/vuetify/lib/components/VCalendar/util/parser.js","mtime":1652222692585},{"path":"/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/babel.config.js","mtime":1651672550000},{"path":"/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/node_modules/cache-loader/dist/cjs.js","mtime":1651672807000},{"path":"/home/CS/users/lvanerme/.linux/cos243/ride-share-repo/api/node_modules/babel-loader/lib/index.js","mtime":1652222692632}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvQ1MvdXNlcnMvbHZhbmVybWUvLmxpbnV4L2NvczI0My9yaWRlLXNoYXJlLXJlcG8vYXBpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiL2hvbWUvQ1MvdXNlcnMvbHZhbmVybWUvLmxpbnV4L2NvczI0My9yaWRlLXNoYXJlLXJlcG8vYXBpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmV4cG9ydCBmdW5jdGlvbiBwYXJzZWRDYXRlZ29yeVRleHQoY2F0ZWdvcnksIGNhdGVnb3J5VGV4dCkgewogIHJldHVybiB0eXBlb2YgY2F0ZWdvcnlUZXh0ID09PSAnc3RyaW5nJyAmJiBfdHlwZW9mKGNhdGVnb3J5KSA9PT0gJ29iamVjdCcgJiYgY2F0ZWdvcnkgPyBjYXRlZ29yeVtjYXRlZ29yeVRleHRdIDogdHlwZW9mIGNhdGVnb3J5VGV4dCA9PT0gJ2Z1bmN0aW9uJyA/IGNhdGVnb3J5VGV4dChjYXRlZ29yeSkgOiBjYXRlZ29yeTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0UGFyc2VkQ2F0ZWdvcmllcyhjYXRlZ29yaWVzLCBjYXRlZ29yeVRleHQpIHsKICBpZiAodHlwZW9mIGNhdGVnb3JpZXMgPT09ICdzdHJpbmcnKSByZXR1cm4gY2F0ZWdvcmllcy5zcGxpdCgvXHMqLFxzLyk7CgogIGlmIChBcnJheS5pc0FycmF5KGNhdGVnb3JpZXMpKSB7CiAgICByZXR1cm4gY2F0ZWdvcmllcy5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5KSB7CiAgICAgIGlmICh0eXBlb2YgY2F0ZWdvcnkgPT09ICdzdHJpbmcnKSByZXR1cm4gY2F0ZWdvcnk7CiAgICAgIHZhciBjYXRlZ29yeU5hbWUgPSB0eXBlb2YgY2F0ZWdvcnkuY2F0ZWdvcnlOYW1lID09PSAnc3RyaW5nJyA/IGNhdGVnb3J5LmNhdGVnb3J5TmFtZSA6IHBhcnNlZENhdGVnb3J5VGV4dChjYXRlZ29yeSwgY2F0ZWdvcnlUZXh0KTsKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY2F0ZWdvcnkpLCB7fSwgewogICAgICAgIGNhdGVnb3J5TmFtZTogY2F0ZWdvcnlOYW1lCiAgICAgIH0pOwogICAgfSk7CiAgfQoKICByZXR1cm4gW107Cn0="},{"version":3,"mappings":";;;;;AAEA,OAAM,SAAUA,kBAAV,CACJC,QADI,EAEJC,YAFI,EAE+C;EAEnD,OAAO,OAAOA,YAAP,KAAwB,QAAxB,IAAoC,QAAOD,QAAP,MAAoB,QAAxD,IAAoEA,QAApE,GACHA,QAAQ,CAACC,YAAD,CADL,GAEH,OAAOA,YAAP,KAAwB,UAAxB,GACEA,YAAY,CAACD,QAAD,CADd,GAEEA,QAJN;AAKD;AAED,OAAM,SAAUE,mBAAV,CACJC,UADI,EAEJF,YAFI,EAE+C;EAEnD,IAAI,OAAOE,UAAP,KAAsB,QAA1B,EAAoC,OAAOA,UAAU,CAACC,KAAX,CAAiB,QAAjB,CAAP;;EACpC,IAAIC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;IAC7B,OAAOA,UAAU,CAACI,GAAX,CAAgB,kBAAD,EAA+B;MACnD,IAAI,OAAOP,QAAP,KAAoB,QAAxB,EAAkC,OAAOA,QAAP;MAElC,IAAMQ,YAAY,GAAG,OAAOR,QAAQ,CAACQ,YAAhB,KAAiC,QAAjC,GACjBR,QAAQ,CAACQ,YADQ,GAEjBT,kBAAkB,CAACC,QAAD,EAAWC,YAAX,CAFtB;MAGA,uCAAYD,QAAZ;QAAsBQ;MAAtB;IANK,EAAP;EAQD;;EACD,OAAO,EAAP;AACD","names":["parsedCategoryText","category","categoryText","getParsedCategories","categories","split","Array","isArray","map","categoryName"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/util/parser.ts"],"sourcesContent":["import { CalendarCategory, CalendarCategoryTextFunction } from 'types'\n\nexport function parsedCategoryText (\n  category: CalendarCategory,\n  categoryText: string | CalendarCategoryTextFunction\n): string {\n  return typeof categoryText === 'string' && typeof category === 'object' && category\n    ? category[categoryText]\n    : typeof categoryText === 'function'\n      ? categoryText(category)\n      : category\n}\n\nexport function getParsedCategories (\n  categories: CalendarCategory | CalendarCategory[],\n  categoryText: string | CalendarCategoryTextFunction\n): CalendarCategory[] {\n  if (typeof categories === 'string') return categories.split(/\\s*,\\s/)\n  if (Array.isArray(categories)) {\n    return categories.map((category: CalendarCategory) => {\n      if (typeof category === 'string') return category\n\n      const categoryName = typeof category.categoryName === 'string'\n        ? category.categoryName\n        : parsedCategoryText(category, categoryText)\n      return { ...category, categoryName }\n    })\n  }\n  return []\n}\n"]}]}